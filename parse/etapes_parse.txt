
[O] a faire
[-] en cour
[V] fait
[T] tests en cour
[S] Leak et securiter

Les etapes du parsing:

    -[S]  Lire la commande de l'utilisateur
        [S]  Utiliser readline pour lire les commandes utilisateur
        [S]  Gérer l'historique des commandes avec add_history et rl_clear_history.
        [S]  Ctrl+D termine minishell et affiche "exit\n"

    -[T]    Tokenisation
        [T]  Diviser la ligne de commande en tokens en respectant les espaces,
            (PLUS TARD : les guillemets, et les caractères d'échappement)

    -[T]  Séparer la commande et ses arguments
    
    -[T]  Gestion des redirections d'entrée/sortie (<, >, >>)
        [T]  Rediriger l'entrée standard (stdin) depuis un fichier (<)
        [T]  Rediriger la sortie standard (stdout) vers un fichier (>)
        [T]  Ajouter à un fichier (>>)

    -[T]  Gestion des pipes (|)
        [T]  Permet de chaîner plusieurs commandes ensemble via des pipes

    -[T]  Gestion des guillemets (" et ')
        [T]  Permet l'utilisation de guillemets simples (')
                et doubles (") pour grouper des arguments contenant des espaces
                ou des caractères spéciaux.
        [T]  Les guillemets simples empêchent l'interprétation des caractères
                spéciaux à l'intérieur.
        [T]  Les guillemets doubles permettent l'expansion des variables
                d'environnement et des caractères d'échappement

    -[T]  Gestion des variables d'environnement
            Permet l'expansion des variables d'environnement ($HOME, $PATH)
            [T]    > echo $HOME    = /home/gmarquis
            [T]    > echo "$HOME"  = /home/gmarquis
            [T]    > echo '$HOME'  = $HOME

    -[T]    heredoc (<< bite > outfile)

    -[O]  Gestion des Erreurs

    -[S]    Gestion des signaux
        [S] Ctrl+Z a ignorer
        [S] Ctrl+\ a ignorer
        [S] Ctrl+C interrompe la ligne actuelle et affiche une nouvelle invite sans quitter le shell
